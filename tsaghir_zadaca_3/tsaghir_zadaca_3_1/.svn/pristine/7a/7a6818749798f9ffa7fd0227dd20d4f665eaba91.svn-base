/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.foi.nwtis.tsaghir.web;

import java.io.IOException;
import java.io.PrintWriter;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.foi.nwtis.tsaghir.rest.klijenti.GMKlijent;
import org.foi.nwtis.tsaghir.rest.klijenti.OWMKlijent;
import org.foi.nwtis.tsaghir.web.podaci.Lokacija;
import org.foi.nwtis.tsaghir.web.podaci.MeteoPodaci;

/**
 *
 * @author grupa_2
 */
@WebServlet(name = "DodajUredjaj", urlPatterns = {"/DodajUredjaj"})
public class DodajUredjaj extends HttpServlet {

    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        
        String naziv = request.getParameter("naziv");
        String adresa = request.getParameter("adresa");
        String akcija = "meteoPodaci";
        //TODO preuzmi stvarnu akciju
        switch(akcija){
            case "geoLokacija":
                geoLokacija(naziv,adresa);
                break;
            case "spremi":
                spremi(naziv,adresa);
                break;
            case "meteoPodaci":
                meteoPodaci(naziv,adresa);
                break;
        }
    }
    

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Handles the HTTP <code>POST</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    /**
     * Returns a short description of the servlet.
     *
     * @return a String containing servlet description
     */
    @Override
    public String getServletInfo() {
        return "Short description";
    }// </editor-fold>

    private void geoLokacija(String naziv, String adresa) {
        System.out.println("Adresa: "+adresa);
        GMKlijent gmk = new GMKlijent();
        Lokacija lokacija = gmk.getGeoLocation(adresa);
        System.out.println("Latitude: "+lokacija.getLatitude());
        System.out.println("Longitude: "+lokacija.getLongitude());
        //TODO pokaži podatke u index.jsp
        //TODO riješi problem hrvatskih slova
        //TODO zapamti geolokaciju u index.jsp
    }

    private void spremi(String naziv, String adresa) {
        //TODO upiši uređaj u bazu podataka
    }

    private void meteoPodaci(String naziv, String adresa) {
        //TODO preuzmi APIKEY iz konf datoteke
        String apikey = "f0304dda4cb4c276ec76a6dea3d6251c";
        OWMKlijent owmk = new OWMKlijent(apikey);
        String lat = "45.8150108";
        String lon = "15.981919";
        //TODO popuni stvarne geolokacijske podatke za adresu
        
        MeteoPodaci mp = owmk.getRealTimeWeather(lat, lon);
        String temp = mp.getTemperatureValue().toString();
        String vlaga = mp.getHumidityValue().toString();
        String tlak = mp.getPressureValue().toString();
        String sunrise = mp.getSunRise().toString();
        
        System.out.println("Temp: " + temp);
        System.out.println("Vlaga: " + vlaga);
        System.out.println("Tlak: " + tlak);
        System.out.println("Sunrise: " + sunrise);
    }

}
