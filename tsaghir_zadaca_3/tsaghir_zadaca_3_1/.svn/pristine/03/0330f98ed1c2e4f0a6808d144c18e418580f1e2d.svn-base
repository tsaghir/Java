/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.foi.nwtis.tsaghir.rest.serveri;

import java.io.StringReader;
import java.util.ArrayList;
import javax.json.Json;
import javax.json.JsonArrayBuilder;
import javax.json.JsonObject;
import javax.json.JsonObjectBuilder;
import javax.json.JsonReader;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.UriInfo;
import javax.ws.rs.PathParam;
import javax.ws.rs.POST;
import javax.ws.rs.Produces;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.foi.nwtis.tsaghir.web.podaci.Lokacija;
import org.foi.nwtis.tsaghir.web.podaci.Uredjaj;

/**
 * REST Web Service
 *
 * @author grupa_2
 */
@Path("/meteoREST")
public class MeteoRESTResourceContainer {

    @Context
    private UriInfo context;

    /**
     * Creates a new instance of MeteoRESTResourceContainer
     */
    public MeteoRESTResourceContainer() {
    }

    /**
     * Retrieves representation of an instance of org.foi.nwtis.tsaghir.rest.serveri.MeteoRESTResourceContainer
     * @return an instance of java.lang.String
     */
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public String getJson() {
        //TODO napraviti čitanje uređaja iz baze podataka
        ArrayList<Uredjaj> uredjaji = new ArrayList<>();
        int i = 0;
        Lokacija loc = new Lokacija("0.0", "0.0");
        for (; i < 10; i++) {
            uredjaji.add(new Uredjaj(i, "IoT " + i, loc));
        }
        
        JsonArrayBuilder jab = Json.createArrayBuilder();
        for (Uredjaj uredjaj : uredjaji) {
            JsonObjectBuilder job = Json.createObjectBuilder();
            job.add("uid", uredjaj.getId());
            job.add("naziv", uredjaj.getNaziv());
            job.add("lat", uredjaj.getGeoloc().getLatitude());
            job.add("lon", uredjaj.getGeoloc().getLongitude());
            
            jab.add(job);
        }
        return jab.build().toString();
    }

    /**
     * POST method for creating an instance of MeteoRESTResource
     * @param content representation for the new resource
     * @return an HTTP response with content of the created resource
     */
    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response postJson(String content) {
         JsonReader reader = Json.createReader(new StringReader(content));
            JsonObject jo = reader.readObject();
            
            int uid=jo.getInt("uid");
            String naziv = jo.getString("naziv");
            String lat = jo.getString("lat");
            String lon = jo.getString("lon");
            
            System.out.println("Uid: " +uid);
            System.out.println("Naziv: " +naziv);
            System.out.println("Lat: " +lat);
            System.out.println("Lon: " +lon);
            
            //TODO upisi uredjaj u bazu podataka
            return Response.created(context.getAbsolutePath()).build();
    }

    /**
     * Sub-resource locator method for {id}
     */
    @Path("{id}")
    public MeteoRESTResource getMeteoRESTResource(@PathParam("id") String id) {
        return MeteoRESTResource.getInstance(id);
    }
}
