/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.foi.nwtis.tsaghir.web.zrna;

import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.inject.Named;
import javax.enterprise.context.RequestScoped;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.SendFailedException;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import org.foi.nwtis.tsaghir.web.pomagaci.KonfiguracijaHelper;

/**
 *
 * @author grupa_2
 */
@Named(value = "slanjePoruke")
@RequestScoped
public class SlanjePoruke {

    private final String SERVER = KonfiguracijaHelper.MAIL_SERVER;
    private final String KORISNIK = KonfiguracijaHelper.MAIL_USERNAME_THREAD;

    private String posluzitelj;
    private String salje;
    private String prima;
    private String predmet;
    private String sadrzaj;

    /**
     * Creates a new instance of SlanjePoruke
     */
    public SlanjePoruke() {
        KonfiguracijaHelper.getInstance();
    }

    public String getSalje() {
        return salje;
    }

    public void setSalje(String salje) {
        this.salje = salje;
    }

    public String getPrima() {
        return prima;
    }

    public void setPrima(String prima) {
        this.prima = prima;
    }

    public String getPredmet() {
        return predmet;
    }

    public void setPredmet(String predmet) {
        this.predmet = predmet;
    }

    public String getSadrzaj() {
        return sadrzaj;
    }

    public void setSadrzaj(String sadrzaj) {
        this.sadrzaj = sadrzaj;
    }

    public String saljiPoruku() {
        //TODO dodaj  za slanje poruke prema primjeru s predavanja koji je priložen uz zadaću
        Properties properties = System.getProperties();
        properties.setProperty("mail.smtp.host", SERVER);
        Session session = Session.getDefaultInstance(properties);
        MimeMessage message = new MimeMessage(session);
        if(napraviPoruku(message, prima, salje, predmet, sadrzaj)){
            try {
                Transport.send(message);
            } catch (MessagingException ex) {
                Logger.getLogger(SlanjePoruke.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("Poruka uspjesno poslana!");
            return "PoslanaPoruka";
        }else{
            System.out.println("Greška prilikom slanja poruke");
            return "PorukaNijePoslana";
        }
    }
    
    private boolean napraviPoruku(Message message, String prima, String salje, String predmet, String sadrzaj){
        try {
            message.setFrom(new InternetAddress(salje));
            message.addRecipient(Message.RecipientType.TO, new InternetAddress(prima));
            message.setSubject(predmet);
            message.setText(sadrzaj);
            return true;
        } catch (AddressException ex) {
            Logger.getLogger(SlanjePoruke.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        } catch (MessagingException ex) {
            Logger.getLogger(SlanjePoruke.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }

    public String pocetna() {
        return "Pocetna";
    }

    public String pregledPoruka() {
        return "PregledPoruka";
    }

}
